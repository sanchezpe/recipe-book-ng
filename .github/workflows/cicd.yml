name: CI/CD Pipeline

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ $default-branch ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.17.0"
          cache: "npm"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            dist
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-angular-${{ hashFiles('**/package-lock.json', '**/angular.json') }}-${{ hashFiles('**.[jt]s', '**.html', '**.css') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-angular-${{ hashFiles('**/package-lock.json', '**/angular.json') }}
            ${{ runner.os }}-angular-

      - name: Install dependencies
        run: npm ci

      - name: Build the application
        run: npm run build -- --base-href /recipe-book-ng/
        env:
          API_URL: ${{ vars.API_URL }}

      - name: Configure 404 Page
        run: cp -r dist/recipe-book-ng/browser/index.html dist/recipe-book-ng/browser/404.html

      - name: Upload build artifacts to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/recipe-book-ng/browser

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
